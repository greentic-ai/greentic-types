name: Auto tag crates on version change

on:
  push:
    branches: [ master ]
  workflow_dispatch:

permissions:
  contents: write

jobs:
  autotag:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout (full history for tags)
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: dtolnay/rust-toolchain@stable
      - uses: Swatinem/rust-cache@v2

      - name: Install jq
        run: sudo apt-get update && sudo apt-get install -y jq

      - name: Ensure scripts present
        run: |
          test -f scripts/version-tools.sh

      - name: Detect changed crate versions and create tags
        env:
          GIT_AUTHOR_NAME: ci-bot
          GIT_AUTHOR_EMAIL: ci-bot@users.noreply.github.com
          GIT_COMMITTER_NAME: ci-bot
          GIT_COMMITTER_EMAIL: ci-bot@users.noreply.github.com
        run: |
          set -euo pipefail
          source scripts/version-tools.sh

          mapfile -t crates < <(list_crates)

          tagged_any="false"

          for line in "${crates[@]}"; do
            name=$(awk '{print $1}' <<<"$line")
            version=$(awk '{print $2}' <<<"$line")
            manifest=$(awk '{print $3}' <<<"$line")
            tag="${name}-v${version}"

            if git rev-parse -q --verify "refs/tags/${tag}" >/dev/null; then
              echo "::notice::Tag ${tag} already exists. Skipping."
              continue
            fi

            crate_dir=$(crate_dir_from_manifest "$manifest")
            cargo_toml="${crate_dir}/Cargo.toml"

            if ! git diff --name-only HEAD~1 HEAD | grep -q "^${cargo_toml}$"; then
              echo "No change in ${cargo_toml} this push. Skipping ${name}."
              continue
            fi

            echo "Creating lightweight tag ${tag}"
            git tag -a "${tag}" -m "${name} ${version}"
            tagged_any="true"
          done

          if [ "$tagged_any" = "true" ]; then
            git push --tags
          else
            echo "No new crate versions detected in this push."
          fi
